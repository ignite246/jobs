{"version":3,"sources":["data.js","components/Vacancy.jsx","components/CreateJobsFORM.jsx","pages/Home.jsx","pages/Jobs.jsx","components/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["posts","id","title","company","city","description","Vacancy","props","console","log","className","style","boxShadow","vacancy","CreateJobFORM","submit","useState","formData","setFormData","handleInput","event","target","name","value","onSubmit","preventDefault","Date","toString","type","placeholder","onChange","required","Home","vacancies","setVacancies","useEffect","map","Jobs","Navbar","to","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a479c63.chunk.js","sourcesContent":["export const posts = [\r\n    {\r\n        id: 1,\r\n        title: \"Backened Node JS developer\",\r\n        company: \"TCS Delhi\",\r\n        city: \"New Delhi\",\r\n        description: \"Node. js developers deploy and maintain network applications. They manage the exchange of data between servers and users, develop back-end components, and connect applications with other web services. They also support front-end developers by integrating web-based applications.\"\r\n    },\r\n\r\n    {\r\n        id: 2,\r\n        title: \"Springboot developer\",\r\n        company: \"TCS Kolkata\",\r\n        city: \"Kolkata\",\r\n        description: \"The Java (Spring Boot) Developer would need to have at least 5+ years of experience. Requirements & Responsibilities: ... - Expertise developing enterprise-level web applications and RESTful APIs using MicroServices, with demonstrable production-scale experience.\"\r\n    },\r\n\r\n    {\r\n        id: 3,\r\n        title: \"React JS front end developer\",\r\n        company: \"TCS Kolkata\",\r\n        city: \"Kolkata\",\r\n        description: \"React. js developers design and implement user interface components for JavaScript-based web and mobile applications using the React open-source library ecosystem. These skilled front-end developers are involved in all stages of interface component design, from conception through to final testing.\"\r\n    }\r\n];\r\n\r\nexport default posts;","import React from 'react';\r\n\r\nconst Vacancy = (props) => {\r\n    console.log(props);\r\n\r\n    return (\r\n\r\n        <div className=\"card my-3\" style={{ boxShadow: '1px 1px 5px grey' }}>\r\n            <div className=\"card-header bg-primary text-white\">\r\n                <h3>{props.vacancy.title}</h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title\">{props.vacancy.company}</h4>\r\n                <p className=\"card-text\"> {props.vacancy.city}</p>\r\n                <p className=\"card-text\"> {props.vacancy.description}</p>\r\n            </div>\r\n            <div className=\"card-footer p-2\">\r\n                <button className=\"btn btn-md btn-outline-primary\">Apply</button>\r\n                <button className=\"btn btn-md btn-outline-dark mx-2\">Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Vacancy\r\n","import React, { useState } from 'react';\r\n\r\nconst CreateJobFORM = ({ submit }) => {\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        title: \"\",\r\n        company: \"\",\r\n        city: \"\",\r\n        description: \"\"\r\n    });\r\n\r\n    const handleInput = (event) => {\r\n\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        //This method is defined inside Home\r\n        //We are passing the reference \r\n        //This submit() refers to the method in prop and it is called when handleSubmit is called\r\n        submit({ ...formData, id: new Date().toString() });\r\n\r\n        console.log(\"Submitting...\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"card my-5\">\r\n            <div className=\"card-body\">\r\n                <h4 className=\"mb-4 bg-success text-white p-2\">Create a vacancy</h4>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"mb-3\">\r\n                        <input\r\n                            type=\"text\" className=\"form-control\"\r\n                            name=\"title\"\r\n                            placeholder=\"Job Title\"\r\n                            value={formData.title}\r\n                            onChange={handleInput}\r\n                            required\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <input\r\n                            type=\"text\" className=\"form-control\" name=\"company\"\r\n                            value={formData.company}\r\n                            onChange={handleInput}\r\n                            placeholder=\"Company Name\"\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <input\r\n                            type=\"text\" className=\"form-control\" name=\"city\"\r\n                            value={formData.city}\r\n                            onChange={handleInput}\r\n                            placeholder=\"City Name\"\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            name=\"description\"\r\n                            value={formData.description}\r\n                            onChange={handleInput}\r\n                            placeholder=\"Role Description\" required></textarea>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateJobFORM;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { posts } from '../data';\r\n\r\nimport Vacancy from '../components/Vacancy';\r\nimport CreateJobFORM from '../components/CreateJobsFORM';\r\n\r\nconst Home = () => {\r\n\r\n    const [vacancies, setVacancies] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        setVacancies(posts);\r\n        console.log(\"Called when page is loaded only\");\r\n    }, []);\r\n\r\n    //Called from CreateJobsFORM component\r\n    const handleSubmit = (formData) => {\r\n        console.log(formData);\r\n        setVacancies([formData, ...vacancies]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section>\r\n                <div className=\"card bg-light\">\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\">Find your dream job today</h3>\r\n                        <p className=\"card-text\">Apply for any vacancies</p>\r\n\r\n\r\n                        <section>\r\n                            <CreateJobFORM submit={handleSubmit}></CreateJobFORM>\r\n                        </section>\r\n\r\n\r\n                        <section>\r\n                            {\r\n                                vacancies.map((vacancy) => {\r\n                                    return (\r\n                                        <Vacancy\r\n                                            vacancy={vacancy}\r\n                                            key={vacancy.id}>\r\n                                        </Vacancy>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </section>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n\r\nconst Jobs = () => {\r\n    return (\r\n        <div>\r\n            <h1>Followings are the Jobs</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jobs;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark py-4\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Dream JOBS </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/jobs\">Jobs</Link>\r\n                            </li>\r\n\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Jobs from \"./pages/Jobs\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n\n      <BrowserRouter>\n\n        <Navbar></Navbar>\n\n        <Switch>\n\n          <Route exact path=\"/myapp/\" component={Home}></Route>\n\n          <Route exact path=\"/myapp/jobs\" component={Jobs}></Route>\n\n        </Switch>\n\n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}